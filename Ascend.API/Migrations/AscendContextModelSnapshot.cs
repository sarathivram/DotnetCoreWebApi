// <auto-generated />
using System;
using Ascend.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ascend.API.Migrations
{
    [DbContext(typeof(AscendContext))]
    partial class AscendContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Ascend.Data.Entities.Company", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("companyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("countryId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.HasIndex("countryId");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "India",
                            companyCode = "Ascend",
                            countryId = 95,
                            email = "ascendoncloud@gmail.com",
                            name = "AscendOnCloud",
                            phoneNumber = ""
                        });
                });

            modelBuilder.Entity("Ascend.Data.Entities.Country", b =>
                {
                    b.Property<int>("countryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("callingCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("countryCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("countryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("countryId");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            countryId = 1,
                            callingCode = "93",
                            countryCode = "AFG",
                            countryName = "Afghanistan"
                        },
                        new
                        {
                            countryId = 2,
                            callingCode = "355",
                            countryCode = "ALB",
                            countryName = "Albania"
                        },
                        new
                        {
                            countryId = 3,
                            callingCode = "213",
                            countryCode = "DZA",
                            countryName = "Algeria"
                        },
                        new
                        {
                            countryId = 4,
                            callingCode = "1-684",
                            countryCode = "ASM",
                            countryName = "AmericanSamoa"
                        },
                        new
                        {
                            countryId = 5,
                            callingCode = "376",
                            countryCode = "AND",
                            countryName = "Andorra"
                        },
                        new
                        {
                            countryId = 6,
                            callingCode = "244",
                            countryCode = "AGO",
                            countryName = "Angola"
                        },
                        new
                        {
                            countryId = 7,
                            callingCode = "1-264",
                            countryCode = "AIA",
                            countryName = "Anguilla"
                        },
                        new
                        {
                            countryId = 8,
                            callingCode = "672",
                            countryCode = "ATA",
                            countryName = "Antarctica"
                        },
                        new
                        {
                            countryId = 9,
                            callingCode = "1-268",
                            countryCode = "ATG",
                            countryName = "AntiguaandBarbuda"
                        },
                        new
                        {
                            countryId = 10,
                            callingCode = "54",
                            countryCode = "ARG",
                            countryName = "Argentina"
                        },
                        new
                        {
                            countryId = 11,
                            callingCode = "374",
                            countryCode = "ARM",
                            countryName = "Armenia"
                        },
                        new
                        {
                            countryId = 12,
                            callingCode = "297",
                            countryCode = "ABW",
                            countryName = "Aruba"
                        },
                        new
                        {
                            countryId = 13,
                            callingCode = "61",
                            countryCode = "AUS",
                            countryName = "Australia"
                        },
                        new
                        {
                            countryId = 14,
                            callingCode = "43",
                            countryCode = "AUT",
                            countryName = "Austria"
                        },
                        new
                        {
                            countryId = 15,
                            callingCode = "994",
                            countryCode = "AZE",
                            countryName = "Azerbaijan"
                        },
                        new
                        {
                            countryId = 16,
                            callingCode = "1-242",
                            countryCode = "BHS",
                            countryName = "Bahamas"
                        },
                        new
                        {
                            countryId = 17,
                            callingCode = "973",
                            countryCode = "BHR",
                            countryName = "Bahrain"
                        },
                        new
                        {
                            countryId = 18,
                            callingCode = "880",
                            countryCode = "BGD",
                            countryName = "Bangladesh"
                        },
                        new
                        {
                            countryId = 19,
                            callingCode = "1-246",
                            countryCode = "BRB",
                            countryName = "Barbados"
                        },
                        new
                        {
                            countryId = 20,
                            callingCode = "375",
                            countryCode = "BLR",
                            countryName = "Belarus"
                        },
                        new
                        {
                            countryId = 21,
                            callingCode = "32",
                            countryCode = "BEL",
                            countryName = "Belgium"
                        },
                        new
                        {
                            countryId = 22,
                            callingCode = "501",
                            countryCode = "BLZ",
                            countryName = "Belize"
                        },
                        new
                        {
                            countryId = 23,
                            callingCode = "229",
                            countryCode = "BEN",
                            countryName = "Benin"
                        },
                        new
                        {
                            countryId = 24,
                            callingCode = "1-441",
                            countryCode = "BMU",
                            countryName = "Bermuda"
                        },
                        new
                        {
                            countryId = 25,
                            callingCode = "975",
                            countryCode = "BTN",
                            countryName = "Bhutan"
                        },
                        new
                        {
                            countryId = 26,
                            callingCode = "591",
                            countryCode = "BOL",
                            countryName = "Bolivia"
                        },
                        new
                        {
                            countryId = 27,
                            callingCode = "387",
                            countryCode = "BIH",
                            countryName = "BosniaandHerzegovina"
                        },
                        new
                        {
                            countryId = 28,
                            callingCode = "267",
                            countryCode = "BWA",
                            countryName = "Botswana"
                        },
                        new
                        {
                            countryId = 29,
                            callingCode = "55",
                            countryCode = "BRA",
                            countryName = "Brazil"
                        },
                        new
                        {
                            countryId = 30,
                            callingCode = "246",
                            countryCode = "IOT",
                            countryName = "BritishIndianOceanTerritory"
                        },
                        new
                        {
                            countryId = 31,
                            callingCode = "1-284",
                            countryCode = "VGB",
                            countryName = "BritishVirginIslands"
                        },
                        new
                        {
                            countryId = 32,
                            callingCode = "673",
                            countryCode = "BRN",
                            countryName = "Brunei"
                        },
                        new
                        {
                            countryId = 33,
                            callingCode = "359",
                            countryCode = "BGR",
                            countryName = "Bulgaria"
                        },
                        new
                        {
                            countryId = 34,
                            callingCode = "226",
                            countryCode = "BFA",
                            countryName = "BurkinaFaso"
                        },
                        new
                        {
                            countryId = 35,
                            callingCode = "257",
                            countryCode = "BDI",
                            countryName = "Burundi"
                        },
                        new
                        {
                            countryId = 36,
                            callingCode = "855",
                            countryCode = "KHM",
                            countryName = "Cambodia"
                        },
                        new
                        {
                            countryId = 37,
                            callingCode = "237",
                            countryCode = "CMR",
                            countryName = "Cameroon"
                        },
                        new
                        {
                            countryId = 38,
                            callingCode = "1",
                            countryCode = "CAN",
                            countryName = "Canada"
                        },
                        new
                        {
                            countryId = 39,
                            callingCode = "238",
                            countryCode = "CPV",
                            countryName = "CapeVerde"
                        },
                        new
                        {
                            countryId = 40,
                            callingCode = "1-345",
                            countryCode = "CYM",
                            countryName = "CaymanIslands"
                        },
                        new
                        {
                            countryId = 41,
                            callingCode = "236",
                            countryCode = "CAF",
                            countryName = "CentralAfricanRepublic"
                        },
                        new
                        {
                            countryId = 42,
                            callingCode = "235",
                            countryCode = "TCD",
                            countryName = "Chad"
                        },
                        new
                        {
                            countryId = 43,
                            callingCode = "56",
                            countryCode = "CHL",
                            countryName = "Chile"
                        },
                        new
                        {
                            countryId = 44,
                            callingCode = "86",
                            countryCode = "CHN",
                            countryName = "China"
                        },
                        new
                        {
                            countryId = 45,
                            callingCode = "61",
                            countryCode = "CXR",
                            countryName = "ChristmasIsland"
                        },
                        new
                        {
                            countryId = 46,
                            callingCode = "61",
                            countryCode = "CCK",
                            countryName = "CocosIslands"
                        },
                        new
                        {
                            countryId = 47,
                            callingCode = "57",
                            countryCode = "COL",
                            countryName = "Colombia"
                        },
                        new
                        {
                            countryId = 48,
                            callingCode = "269",
                            countryCode = "COM",
                            countryName = "Comoros"
                        },
                        new
                        {
                            countryId = 49,
                            callingCode = "682",
                            countryCode = "COK",
                            countryName = "CookIslands"
                        },
                        new
                        {
                            countryId = 50,
                            callingCode = "506",
                            countryCode = "CRI",
                            countryName = "CostaRica"
                        },
                        new
                        {
                            countryId = 51,
                            callingCode = "385",
                            countryCode = "HRV",
                            countryName = "Croatia"
                        },
                        new
                        {
                            countryId = 52,
                            callingCode = "53",
                            countryCode = "CUB",
                            countryName = "Cuba"
                        },
                        new
                        {
                            countryId = 53,
                            callingCode = "599",
                            countryCode = "CUW",
                            countryName = "Curacao"
                        },
                        new
                        {
                            countryId = 54,
                            callingCode = "357",
                            countryCode = "CYP",
                            countryName = "Cyprus"
                        },
                        new
                        {
                            countryId = 55,
                            callingCode = "420",
                            countryCode = "CZE",
                            countryName = "CzechRepublic"
                        },
                        new
                        {
                            countryId = 56,
                            callingCode = "243",
                            countryCode = "COD",
                            countryName = "DemocraticRepublicoftheCongo"
                        },
                        new
                        {
                            countryId = 57,
                            callingCode = "45",
                            countryCode = "DNK",
                            countryName = "Denmark"
                        },
                        new
                        {
                            countryId = 58,
                            callingCode = "253",
                            countryCode = "DJI",
                            countryName = "Djibouti"
                        },
                        new
                        {
                            countryId = 59,
                            callingCode = "1-767",
                            countryCode = "DMA",
                            countryName = "Dominica"
                        },
                        new
                        {
                            countryId = 60,
                            callingCode = "1-809",
                            countryCode = "DOM",
                            countryName = "DominicanRepublic"
                        },
                        new
                        {
                            countryId = 61,
                            callingCode = "670",
                            countryCode = "TLS",
                            countryName = "EastTimor"
                        },
                        new
                        {
                            countryId = 62,
                            callingCode = "593",
                            countryCode = "ECU",
                            countryName = "Ecuador"
                        },
                        new
                        {
                            countryId = 63,
                            callingCode = "20",
                            countryCode = "EGY",
                            countryName = "Egypt"
                        },
                        new
                        {
                            countryId = 64,
                            callingCode = "503",
                            countryCode = "SLV",
                            countryName = "ElSalvador"
                        },
                        new
                        {
                            countryId = 65,
                            callingCode = "240",
                            countryCode = "GNQ",
                            countryName = "EquatorialGuinea"
                        },
                        new
                        {
                            countryId = 66,
                            callingCode = "291",
                            countryCode = "ERI",
                            countryName = "Eritrea"
                        },
                        new
                        {
                            countryId = 67,
                            callingCode = "372",
                            countryCode = "EST",
                            countryName = "Estonia"
                        },
                        new
                        {
                            countryId = 68,
                            callingCode = "251",
                            countryCode = "ETH",
                            countryName = "Ethiopia"
                        },
                        new
                        {
                            countryId = 69,
                            callingCode = "500",
                            countryCode = "FLK",
                            countryName = "FalklandIslands"
                        },
                        new
                        {
                            countryId = 70,
                            callingCode = "298",
                            countryCode = "FRO",
                            countryName = "FaroeIslands"
                        },
                        new
                        {
                            countryId = 71,
                            callingCode = "679",
                            countryCode = "FJI",
                            countryName = "Fiji"
                        },
                        new
                        {
                            countryId = 72,
                            callingCode = "358",
                            countryCode = "FIN",
                            countryName = "Finland"
                        },
                        new
                        {
                            countryId = 73,
                            callingCode = "33",
                            countryCode = "FRA",
                            countryName = "France"
                        },
                        new
                        {
                            countryId = 74,
                            callingCode = "689",
                            countryCode = "PYF",
                            countryName = "FrenchPolynesia"
                        },
                        new
                        {
                            countryId = 75,
                            callingCode = "241",
                            countryCode = "GAB",
                            countryName = "Gabon"
                        },
                        new
                        {
                            countryId = 76,
                            callingCode = "220",
                            countryCode = "GMB",
                            countryName = "Gambia"
                        },
                        new
                        {
                            countryId = 77,
                            callingCode = "995",
                            countryCode = "GEO",
                            countryName = "Georgia"
                        },
                        new
                        {
                            countryId = 78,
                            callingCode = "49",
                            countryCode = "DEU",
                            countryName = "Germany"
                        },
                        new
                        {
                            countryId = 79,
                            callingCode = "233",
                            countryCode = "GHA",
                            countryName = "Ghana"
                        },
                        new
                        {
                            countryId = 80,
                            callingCode = "350",
                            countryCode = "GIB",
                            countryName = "Gibraltar"
                        },
                        new
                        {
                            countryId = 81,
                            callingCode = "30",
                            countryCode = "GRC",
                            countryName = "Greece"
                        },
                        new
                        {
                            countryId = 82,
                            callingCode = "299",
                            countryCode = "GRL",
                            countryName = "Greenland"
                        },
                        new
                        {
                            countryId = 83,
                            callingCode = "1-473",
                            countryCode = "GRD",
                            countryName = "Grenada"
                        },
                        new
                        {
                            countryId = 84,
                            callingCode = "1-671",
                            countryCode = "GUM",
                            countryName = "Guam"
                        },
                        new
                        {
                            countryId = 85,
                            callingCode = "502",
                            countryCode = "GTM",
                            countryName = "Guatemala"
                        },
                        new
                        {
                            countryId = 86,
                            callingCode = "1481",
                            countryCode = "GGY",
                            countryName = "Guernsey"
                        },
                        new
                        {
                            countryId = 87,
                            callingCode = "224",
                            countryCode = "GIN",
                            countryName = "Guinea"
                        },
                        new
                        {
                            countryId = 88,
                            callingCode = "245",
                            countryCode = "GNB",
                            countryName = "Guinea-Bissau"
                        },
                        new
                        {
                            countryId = 89,
                            callingCode = "592",
                            countryCode = "GUY",
                            countryName = "Guyana"
                        },
                        new
                        {
                            countryId = 90,
                            callingCode = "509",
                            countryCode = "HTI",
                            countryName = "Haiti"
                        },
                        new
                        {
                            countryId = 91,
                            callingCode = "504",
                            countryCode = "HND",
                            countryName = "Honduras"
                        },
                        new
                        {
                            countryId = 92,
                            callingCode = "852",
                            countryCode = "HKG",
                            countryName = "HongKong"
                        },
                        new
                        {
                            countryId = 93,
                            callingCode = "36",
                            countryCode = "HUN",
                            countryName = "Hungary"
                        },
                        new
                        {
                            countryId = 94,
                            callingCode = "354",
                            countryCode = "ISL",
                            countryName = "Iceland"
                        },
                        new
                        {
                            countryId = 95,
                            callingCode = "91",
                            countryCode = "IND",
                            countryName = "India"
                        },
                        new
                        {
                            countryId = 96,
                            callingCode = "62",
                            countryCode = "IDN",
                            countryName = "Indonesia"
                        },
                        new
                        {
                            countryId = 97,
                            callingCode = "98",
                            countryCode = "IRN",
                            countryName = "Iran"
                        },
                        new
                        {
                            countryId = 98,
                            callingCode = "964",
                            countryCode = "IRQ",
                            countryName = "Iraq"
                        },
                        new
                        {
                            countryId = 99,
                            callingCode = "353",
                            countryCode = "IRL",
                            countryName = "Ireland"
                        },
                        new
                        {
                            countryId = 100,
                            callingCode = "1624",
                            countryCode = "IMN",
                            countryName = "IsleofMan"
                        },
                        new
                        {
                            countryId = 101,
                            callingCode = "972",
                            countryCode = "ISR",
                            countryName = "Israel"
                        },
                        new
                        {
                            countryId = 102,
                            callingCode = "39",
                            countryCode = "ITA",
                            countryName = "Italy"
                        },
                        new
                        {
                            countryId = 103,
                            callingCode = "225",
                            countryCode = "CIV",
                            countryName = "IvoryCoast"
                        },
                        new
                        {
                            countryId = 104,
                            callingCode = "1-876",
                            countryCode = "JAM",
                            countryName = "Jamaica"
                        },
                        new
                        {
                            countryId = 105,
                            callingCode = "81",
                            countryCode = "JPN",
                            countryName = "Japan"
                        },
                        new
                        {
                            countryId = 106,
                            callingCode = "1534",
                            countryCode = "JEY",
                            countryName = "Jersey"
                        },
                        new
                        {
                            countryId = 107,
                            callingCode = "962",
                            countryCode = "JOR",
                            countryName = "Jordan"
                        },
                        new
                        {
                            countryId = 108,
                            callingCode = "7",
                            countryCode = "KAZ",
                            countryName = "Kazakhstan"
                        },
                        new
                        {
                            countryId = 109,
                            callingCode = "254",
                            countryCode = "KEN",
                            countryName = "Kenya"
                        },
                        new
                        {
                            countryId = 110,
                            callingCode = "686",
                            countryCode = "KIR",
                            countryName = "Kiribati"
                        },
                        new
                        {
                            countryId = 111,
                            callingCode = "383",
                            countryCode = "XKX",
                            countryName = "Kosovo"
                        },
                        new
                        {
                            countryId = 112,
                            callingCode = "965",
                            countryCode = "KWT",
                            countryName = "Kuwait"
                        },
                        new
                        {
                            countryId = 113,
                            callingCode = "996",
                            countryCode = "KGZ",
                            countryName = "Kyrgyzstan"
                        },
                        new
                        {
                            countryId = 114,
                            callingCode = "856",
                            countryCode = "LAO",
                            countryName = "Laos"
                        },
                        new
                        {
                            countryId = 115,
                            callingCode = "371",
                            countryCode = "LVA",
                            countryName = "Latvia"
                        },
                        new
                        {
                            countryId = 116,
                            callingCode = "961",
                            countryCode = "LBN",
                            countryName = "Lebanon"
                        },
                        new
                        {
                            countryId = 117,
                            callingCode = "266",
                            countryCode = "LSO",
                            countryName = "Lesotho"
                        },
                        new
                        {
                            countryId = 118,
                            callingCode = "231",
                            countryCode = "LBR",
                            countryName = "Liberia"
                        },
                        new
                        {
                            countryId = 119,
                            callingCode = "218",
                            countryCode = "LBY",
                            countryName = "Libya"
                        },
                        new
                        {
                            countryId = 120,
                            callingCode = "423",
                            countryCode = "LIE",
                            countryName = "Liechtenstein"
                        },
                        new
                        {
                            countryId = 121,
                            callingCode = "370",
                            countryCode = "LTU",
                            countryName = "Lithuania"
                        },
                        new
                        {
                            countryId = 122,
                            callingCode = "352",
                            countryCode = "LUX",
                            countryName = "Luxembourg"
                        },
                        new
                        {
                            countryId = 123,
                            callingCode = "853",
                            countryCode = "MAC",
                            countryName = "Macao"
                        },
                        new
                        {
                            countryId = 124,
                            callingCode = "389",
                            countryCode = "MKD",
                            countryName = "Macedonia"
                        },
                        new
                        {
                            countryId = 125,
                            callingCode = "261",
                            countryCode = "MDG",
                            countryName = "Madagascar"
                        },
                        new
                        {
                            countryId = 126,
                            callingCode = "265",
                            countryCode = "MWI",
                            countryName = "Malawi"
                        },
                        new
                        {
                            countryId = 127,
                            callingCode = "60",
                            countryCode = "MYS",
                            countryName = "Malaysia"
                        },
                        new
                        {
                            countryId = 128,
                            callingCode = "960",
                            countryCode = "MDV",
                            countryName = "Maldives"
                        },
                        new
                        {
                            countryId = 129,
                            callingCode = "223",
                            countryCode = "MLI",
                            countryName = "Mali"
                        },
                        new
                        {
                            countryId = 130,
                            callingCode = "356",
                            countryCode = "MLT",
                            countryName = "Malta"
                        },
                        new
                        {
                            countryId = 131,
                            callingCode = "692",
                            countryCode = "MHL",
                            countryName = "MarshallIslands"
                        },
                        new
                        {
                            countryId = 132,
                            callingCode = "222",
                            countryCode = "MRT",
                            countryName = "Mauritania"
                        },
                        new
                        {
                            countryId = 133,
                            callingCode = "230",
                            countryCode = "MUS",
                            countryName = "Mauritius"
                        },
                        new
                        {
                            countryId = 134,
                            callingCode = "262",
                            countryCode = "MYT",
                            countryName = "Mayotte"
                        },
                        new
                        {
                            countryId = 135,
                            callingCode = "52",
                            countryCode = "MEX",
                            countryName = "Mexico"
                        },
                        new
                        {
                            countryId = 136,
                            callingCode = "691",
                            countryCode = "FSM",
                            countryName = "Micronesia"
                        },
                        new
                        {
                            countryId = 137,
                            callingCode = "373",
                            countryCode = "MDA",
                            countryName = "Moldova"
                        },
                        new
                        {
                            countryId = 138,
                            callingCode = "377",
                            countryCode = "MCO",
                            countryName = "Monaco"
                        },
                        new
                        {
                            countryId = 139,
                            callingCode = "976",
                            countryCode = "MNG",
                            countryName = "Mongolia"
                        },
                        new
                        {
                            countryId = 140,
                            callingCode = "382",
                            countryCode = "MNE",
                            countryName = "Montenegro"
                        },
                        new
                        {
                            countryId = 141,
                            callingCode = "1-664",
                            countryCode = "MSR",
                            countryName = "Montserrat"
                        },
                        new
                        {
                            countryId = 142,
                            callingCode = "212",
                            countryCode = "MAR",
                            countryName = "Morocco"
                        },
                        new
                        {
                            countryId = 143,
                            callingCode = "258",
                            countryCode = "MOZ",
                            countryName = "Mozambique"
                        },
                        new
                        {
                            countryId = 144,
                            callingCode = "95",
                            countryCode = "MMR",
                            countryName = "Myanmar"
                        },
                        new
                        {
                            countryId = 145,
                            callingCode = "264",
                            countryCode = "NAM",
                            countryName = "Namibia"
                        },
                        new
                        {
                            countryId = 146,
                            callingCode = "674",
                            countryCode = "NRU",
                            countryName = "Nauru"
                        },
                        new
                        {
                            countryId = 147,
                            callingCode = "977",
                            countryCode = "NPL",
                            countryName = "Nepal"
                        },
                        new
                        {
                            countryId = 148,
                            callingCode = "31",
                            countryCode = "NLD",
                            countryName = "Netherlands"
                        },
                        new
                        {
                            countryId = 149,
                            callingCode = "599",
                            countryCode = "ANT",
                            countryName = "NetherlandsAntilles"
                        },
                        new
                        {
                            countryId = 150,
                            callingCode = "687",
                            countryCode = "NCL",
                            countryName = "NewCaledonia"
                        },
                        new
                        {
                            countryId = 151,
                            callingCode = "64",
                            countryCode = "NZL",
                            countryName = "NewZealand"
                        },
                        new
                        {
                            countryId = 152,
                            callingCode = "505",
                            countryCode = "NIC",
                            countryName = "Nicaragua"
                        },
                        new
                        {
                            countryId = 153,
                            callingCode = "227",
                            countryCode = "NER",
                            countryName = "Niger"
                        },
                        new
                        {
                            countryId = 154,
                            callingCode = "234",
                            countryCode = "NGA",
                            countryName = "Nigeria"
                        },
                        new
                        {
                            countryId = 155,
                            callingCode = "683",
                            countryCode = "NIU",
                            countryName = "Niue"
                        },
                        new
                        {
                            countryId = 156,
                            callingCode = "850",
                            countryCode = "PRK",
                            countryName = "NorthKorea"
                        },
                        new
                        {
                            countryId = 157,
                            callingCode = "1-670",
                            countryCode = "MNP",
                            countryName = "NorthernMarianaIslands"
                        },
                        new
                        {
                            countryId = 158,
                            callingCode = "47",
                            countryCode = "NOR",
                            countryName = "Norway"
                        },
                        new
                        {
                            countryId = 159,
                            callingCode = "968",
                            countryCode = "OMN",
                            countryName = "Oman"
                        },
                        new
                        {
                            countryId = 160,
                            callingCode = "92",
                            countryCode = "PAK",
                            countryName = "Pakistan"
                        },
                        new
                        {
                            countryId = 161,
                            callingCode = "680",
                            countryCode = "PLW",
                            countryName = "Palau"
                        },
                        new
                        {
                            countryId = 162,
                            callingCode = "970",
                            countryCode = "PSE",
                            countryName = "Palestine"
                        },
                        new
                        {
                            countryId = 163,
                            callingCode = "507",
                            countryCode = "PAN",
                            countryName = "Panama"
                        },
                        new
                        {
                            countryId = 164,
                            callingCode = "675",
                            countryCode = "PNG",
                            countryName = "PapuaNewGuinea"
                        },
                        new
                        {
                            countryId = 165,
                            callingCode = "595",
                            countryCode = "PRY",
                            countryName = "Paraguay"
                        },
                        new
                        {
                            countryId = 166,
                            callingCode = "51",
                            countryCode = "PER",
                            countryName = "Peru"
                        },
                        new
                        {
                            countryId = 167,
                            callingCode = "63",
                            countryCode = "PHL",
                            countryName = "Philippines"
                        },
                        new
                        {
                            countryId = 168,
                            callingCode = "64",
                            countryCode = "PCN",
                            countryName = "Pitcairn"
                        },
                        new
                        {
                            countryId = 169,
                            callingCode = "48",
                            countryCode = "POL",
                            countryName = "Poland"
                        },
                        new
                        {
                            countryId = 170,
                            callingCode = "351",
                            countryCode = "PRT",
                            countryName = "Portugal"
                        },
                        new
                        {
                            countryId = 171,
                            callingCode = "1-787",
                            countryCode = "PRI",
                            countryName = "PuertoRico"
                        },
                        new
                        {
                            countryId = 172,
                            callingCode = "974",
                            countryCode = "QAT",
                            countryName = "Qatar"
                        },
                        new
                        {
                            countryId = 173,
                            callingCode = "242",
                            countryCode = "COG",
                            countryName = "RepublicoftheCongo"
                        },
                        new
                        {
                            countryId = 174,
                            callingCode = "262",
                            countryCode = "REU",
                            countryName = "Reunion"
                        },
                        new
                        {
                            countryId = 175,
                            callingCode = "40",
                            countryCode = "ROU",
                            countryName = "Romania"
                        },
                        new
                        {
                            countryId = 176,
                            callingCode = "7",
                            countryCode = "RUS",
                            countryName = "Russia"
                        },
                        new
                        {
                            countryId = 177,
                            callingCode = "250",
                            countryCode = "RWA",
                            countryName = "Rwanda"
                        },
                        new
                        {
                            countryId = 178,
                            callingCode = "590",
                            countryCode = "BLM",
                            countryName = "SaintBarthelemy"
                        },
                        new
                        {
                            countryId = 179,
                            callingCode = "290",
                            countryCode = "SHN",
                            countryName = "SaintHelena"
                        },
                        new
                        {
                            countryId = 180,
                            callingCode = "1-869",
                            countryCode = "KNA",
                            countryName = "SaintKittsandNevis"
                        },
                        new
                        {
                            countryId = 181,
                            callingCode = "1-758",
                            countryCode = "LCA",
                            countryName = "SaintLucia"
                        },
                        new
                        {
                            countryId = 182,
                            callingCode = "590",
                            countryCode = "MAF",
                            countryName = "SaintMartin"
                        },
                        new
                        {
                            countryId = 183,
                            callingCode = "508",
                            countryCode = "SPM",
                            countryName = "SaintPierreandMiquelon"
                        },
                        new
                        {
                            countryId = 184,
                            callingCode = "1-784",
                            countryCode = "VCT",
                            countryName = "SaintVincentandtheGrenadines"
                        },
                        new
                        {
                            countryId = 185,
                            callingCode = "685",
                            countryCode = "WSM",
                            countryName = "Samoa"
                        },
                        new
                        {
                            countryId = 186,
                            callingCode = "378",
                            countryCode = "SMR",
                            countryName = "SanMarino"
                        },
                        new
                        {
                            countryId = 187,
                            callingCode = "239",
                            countryCode = "STP",
                            countryName = "SaoTomeandPrincipe"
                        },
                        new
                        {
                            countryId = 188,
                            callingCode = "966",
                            countryCode = "SAU",
                            countryName = "SaudiArabia"
                        },
                        new
                        {
                            countryId = 189,
                            callingCode = "221",
                            countryCode = "SEN",
                            countryName = "Senegal"
                        },
                        new
                        {
                            countryId = 190,
                            callingCode = "381",
                            countryCode = "SRB",
                            countryName = "Serbia"
                        },
                        new
                        {
                            countryId = 191,
                            callingCode = "248",
                            countryCode = "SYC",
                            countryName = "Seychelles"
                        },
                        new
                        {
                            countryId = 192,
                            callingCode = "232",
                            countryCode = "SLE",
                            countryName = "SierraLeone"
                        },
                        new
                        {
                            countryId = 193,
                            callingCode = "65",
                            countryCode = "SGP",
                            countryName = "Singapore"
                        },
                        new
                        {
                            countryId = 194,
                            callingCode = "1-721",
                            countryCode = "SXM",
                            countryName = "SintMaarten"
                        },
                        new
                        {
                            countryId = 195,
                            callingCode = "421",
                            countryCode = "SVK",
                            countryName = "Slovakia"
                        },
                        new
                        {
                            countryId = 196,
                            callingCode = "386",
                            countryCode = "SVN",
                            countryName = "Slovenia"
                        },
                        new
                        {
                            countryId = 197,
                            callingCode = "677",
                            countryCode = "SLB",
                            countryName = "SolomonIslands"
                        },
                        new
                        {
                            countryId = 198,
                            callingCode = "252",
                            countryCode = "SOM",
                            countryName = "Somalia"
                        },
                        new
                        {
                            countryId = 199,
                            callingCode = "27",
                            countryCode = "ZAF",
                            countryName = "SouthAfrica"
                        },
                        new
                        {
                            countryId = 200,
                            callingCode = "82",
                            countryCode = "KOR",
                            countryName = "SouthKorea"
                        },
                        new
                        {
                            countryId = 201,
                            callingCode = "211",
                            countryCode = "SSD",
                            countryName = "SouthSudan"
                        },
                        new
                        {
                            countryId = 202,
                            callingCode = "34",
                            countryCode = "ESP",
                            countryName = "Spain"
                        },
                        new
                        {
                            countryId = 203,
                            callingCode = "94",
                            countryCode = "LKA",
                            countryName = "SriLanka"
                        },
                        new
                        {
                            countryId = 204,
                            callingCode = "249",
                            countryCode = "SDN",
                            countryName = "Sudan"
                        },
                        new
                        {
                            countryId = 205,
                            callingCode = "597",
                            countryCode = "SUR",
                            countryName = "Suriname"
                        },
                        new
                        {
                            countryId = 206,
                            callingCode = "47",
                            countryCode = "SJM",
                            countryName = "SvalbardandJanMayen"
                        },
                        new
                        {
                            countryId = 207,
                            callingCode = "268",
                            countryCode = "SWZ",
                            countryName = "Swaziland"
                        },
                        new
                        {
                            countryId = 208,
                            callingCode = "46",
                            countryCode = "SWE",
                            countryName = "Sweden"
                        },
                        new
                        {
                            countryId = 209,
                            callingCode = "41",
                            countryCode = "CHE",
                            countryName = "Switzerland"
                        },
                        new
                        {
                            countryId = 210,
                            callingCode = "963",
                            countryCode = "SYR",
                            countryName = "Syria"
                        },
                        new
                        {
                            countryId = 211,
                            callingCode = "886",
                            countryCode = "TWN",
                            countryName = "Taiwan"
                        },
                        new
                        {
                            countryId = 212,
                            callingCode = "992",
                            countryCode = "TJK",
                            countryName = "Tajikistan"
                        },
                        new
                        {
                            countryId = 213,
                            callingCode = "255",
                            countryCode = "TZA",
                            countryName = "Tanzania"
                        },
                        new
                        {
                            countryId = 214,
                            callingCode = "66",
                            countryCode = "THA",
                            countryName = "Thailand"
                        },
                        new
                        {
                            countryId = 215,
                            callingCode = "228",
                            countryCode = "TGO",
                            countryName = "Togo"
                        },
                        new
                        {
                            countryId = 216,
                            callingCode = "690",
                            countryCode = "TKL",
                            countryName = "Tokelau"
                        },
                        new
                        {
                            countryId = 217,
                            callingCode = "676",
                            countryCode = "TON",
                            countryName = "Tonga"
                        },
                        new
                        {
                            countryId = 218,
                            callingCode = "1-868",
                            countryCode = "TTO",
                            countryName = "TrinidadandTobago"
                        },
                        new
                        {
                            countryId = 219,
                            callingCode = "216",
                            countryCode = "TUN",
                            countryName = "Tunisia"
                        },
                        new
                        {
                            countryId = 220,
                            callingCode = "90",
                            countryCode = "TUR",
                            countryName = "Turkey"
                        },
                        new
                        {
                            countryId = 221,
                            callingCode = "993",
                            countryCode = "TKM",
                            countryName = "Turkmenistan"
                        },
                        new
                        {
                            countryId = 222,
                            callingCode = "649",
                            countryCode = "TCA",
                            countryName = "TurksandCaicosIslands"
                        },
                        new
                        {
                            countryId = 223,
                            callingCode = "688",
                            countryCode = "TUV",
                            countryName = "Tuvalu"
                        },
                        new
                        {
                            countryId = 224,
                            callingCode = "1-340",
                            countryCode = "VIR",
                            countryName = "U.S.VirginIslands"
                        },
                        new
                        {
                            countryId = 225,
                            callingCode = "256",
                            countryCode = "UGA",
                            countryName = "Uganda"
                        },
                        new
                        {
                            countryId = 226,
                            callingCode = "380",
                            countryCode = "UKR",
                            countryName = "Ukraine"
                        },
                        new
                        {
                            countryId = 227,
                            callingCode = "971",
                            countryCode = "ARE",
                            countryName = "UnitedArabEmirates"
                        },
                        new
                        {
                            countryId = 228,
                            callingCode = "44",
                            countryCode = "GBR",
                            countryName = "UnitedKingdom"
                        },
                        new
                        {
                            countryId = 229,
                            callingCode = "1",
                            countryCode = "USA",
                            countryName = "UnitedStates"
                        },
                        new
                        {
                            countryId = 230,
                            callingCode = "598",
                            countryCode = "URY",
                            countryName = "Uruguay"
                        },
                        new
                        {
                            countryId = 231,
                            callingCode = "998",
                            countryCode = "UZB",
                            countryName = "Uzbekistan"
                        },
                        new
                        {
                            countryId = 232,
                            callingCode = "678",
                            countryCode = "VUT",
                            countryName = "Vanuatu"
                        },
                        new
                        {
                            countryId = 233,
                            callingCode = "379",
                            countryCode = "VAT",
                            countryName = "Vatican"
                        },
                        new
                        {
                            countryId = 234,
                            callingCode = "58",
                            countryCode = "VEN",
                            countryName = "Venezuela"
                        },
                        new
                        {
                            countryId = 235,
                            callingCode = "84",
                            countryCode = "VNM",
                            countryName = "Vietnam"
                        },
                        new
                        {
                            countryId = 236,
                            callingCode = "681",
                            countryCode = "WLF",
                            countryName = "WallisandFutuna"
                        },
                        new
                        {
                            countryId = 237,
                            callingCode = "212",
                            countryCode = "ESH",
                            countryName = "WesternSahara"
                        },
                        new
                        {
                            countryId = 238,
                            callingCode = "967",
                            countryCode = "YEM",
                            countryName = "Yemen"
                        },
                        new
                        {
                            countryId = 239,
                            callingCode = "260",
                            countryCode = "ZMB",
                            countryName = "Zambia"
                        },
                        new
                        {
                            countryId = 240,
                            callingCode = "263",
                            countryCode = "ZWE",
                            countryName = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("Ascend.Data.Entities.Currency", b =>
                {
                    b.Property<int>("currencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("currencyCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("currencyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("currencySymbol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("currencyId");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            currencyId = 1,
                            currencyCode = "INR",
                            currencyName = "Indian Rupee",
                            currencySymbol = "₹"
                        },
                        new
                        {
                            currencyId = 2,
                            currencyCode = "DH",
                            currencyName = "United Arab Emirates dirham",
                            currencySymbol = "فلس"
                        });
                });

            modelBuilder.Entity("Ascend.Data.Entities.Department", b =>
                {
                    b.Property<int>("departmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("departmentCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("departmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("userCreated")
                        .HasColumnType("int");

                    b.Property<int?>("userModified")
                        .HasColumnType("int");

                    b.HasKey("departmentId");

                    b.HasIndex("companyId");

                    b.HasIndex("userCreated");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            departmentId = 1,
                            companyId = 1,
                            dateCreated = new DateTime(2021, 2, 2, 18, 41, 49, 189, DateTimeKind.Local).AddTicks(7259),
                            departmentCode = "Admin",
                            departmentName = "Administration",
                            isDelete = false
                        });
                });

            modelBuilder.Entity("Ascend.Data.Entities.Designation", b =>
                {
                    b.Property<int>("designationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("designationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("designationId");

                    b.HasIndex("companyId");

                    b.ToTable("Designation");

                    b.HasData(
                        new
                        {
                            designationId = 1,
                            companyId = 1,
                            designationName = "Admin"
                        },
                        new
                        {
                            designationId = 2,
                            companyId = 1,
                            designationName = "User"
                        });
                });

            modelBuilder.Entity("Ascend.Data.Entities.DesignationPermission", b =>
                {
                    b.Property<int>("designationPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<int?>("designationId")
                        .HasColumnType("int");

                    b.Property<int?>("permissionId")
                        .HasColumnType("int");

                    b.HasKey("designationPermissionId");

                    b.HasIndex("companyId");

                    b.HasIndex("designationId");

                    b.HasIndex("permissionId");

                    b.ToTable("DesignationPermission");

                    b.HasData(
                        new
                        {
                            designationPermissionId = 1,
                            companyId = 1,
                            designationId = 1,
                            permissionId = 1
                        },
                        new
                        {
                            designationPermissionId = 2,
                            companyId = 1,
                            designationId = 1,
                            permissionId = 2
                        },
                        new
                        {
                            designationPermissionId = 11,
                            companyId = 1,
                            designationId = 2,
                            permissionId = 1
                        },
                        new
                        {
                            designationPermissionId = 12,
                            companyId = 1,
                            designationId = 2,
                            permissionId = 2
                        });
                });

            modelBuilder.Entity("Ascend.Data.Entities.Permission", b =>
                {
                    b.Property<int>("permissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("permissionCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("permissionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("permissionId");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            permissionId = 1,
                            permissionCode = "BRAND",
                            permissionName = "Brand"
                        },
                        new
                        {
                            permissionId = 2,
                            permissionCode = "CATEGORY",
                            permissionName = "Category"
                        });
                });

            modelBuilder.Entity("Ascend.Data.Entities.State", b =>
                {
                    b.Property<int>("stateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("countryId")
                        .HasColumnType("int");

                    b.Property<string>("stateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("stateId");

                    b.HasIndex("countryId");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            stateId = 1,
                            countryId = 227,
                            stateName = "Abu Dhabi"
                        },
                        new
                        {
                            stateId = 2,
                            countryId = 227,
                            stateName = "Ajman"
                        },
                        new
                        {
                            stateId = 3,
                            countryId = 227,
                            stateName = "Sharjah"
                        },
                        new
                        {
                            stateId = 4,
                            countryId = 227,
                            stateName = "Dubai"
                        },
                        new
                        {
                            stateId = 5,
                            countryId = 227,
                            stateName = "Fujairah"
                        },
                        new
                        {
                            stateId = 6,
                            countryId = 227,
                            stateName = "Ras Al Khaimah"
                        },
                        new
                        {
                            stateId = 7,
                            countryId = 227,
                            stateName = "Umm Al Quwain"
                        });
                });

            modelBuilder.Entity("Ascend.Data.Entities.Uom", b =>
                {
                    b.Property<int>("uomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("uomName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("uomId");

                    b.ToTable("Uom");

                    b.HasData(
                        new
                        {
                            uomId = 1,
                            uomName = "Litter"
                        },
                        new
                        {
                            uomId = 2,
                            uomName = "Kg"
                        });
                });

            modelBuilder.Entity("Ascend.Data.Entities.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<int?>("countryId")
                        .HasColumnType("int");

                    b.Property<int?>("departmentId")
                        .HasColumnType("int");

                    b.Property<int?>("designationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dob")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("doj")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nationality")
                        .HasColumnType("int");

                    b.Property<string>("nativeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("userPassword")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("userId");

                    b.HasIndex("companyId");

                    b.HasIndex("countryId");

                    b.HasIndex("departmentId")
                        .IsUnique()
                        .HasFilter("[departmentId] IS NOT NULL");

                    b.HasIndex("designationId");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            userId = 1,
                            companyId = 1,
                            departmentId = 1,
                            designationId = 1,
                            dob = new DateTime(2021, 2, 2, 18, 41, 49, 193, DateTimeKind.Local).AddTicks(7302),
                            doj = new DateTime(2021, 2, 2, 18, 41, 49, 193, DateTimeKind.Local).AddTicks(6653),
                            email = "admin@gmail.com",
                            firstName = "Super",
                            gender = "male",
                            lastName = "Admin",
                            nationality = 95,
                            nativeName = "مشرف",
                            phoneNumber = "9876543210",
                            userCode = "ASND001",
                            userPassword = "admin"
                        },
                        new
                        {
                            userId = 2,
                            companyId = 1,
                            departmentId = 1,
                            designationId = 2,
                            dob = new DateTime(2021, 2, 2, 18, 41, 49, 194, DateTimeKind.Local).AddTicks(527),
                            doj = new DateTime(2021, 2, 2, 18, 41, 49, 194, DateTimeKind.Local).AddTicks(514),
                            email = "user@gmail.com",
                            firstName = "Normal",
                            gender = "male",
                            lastName = "User",
                            nationality = 95,
                            nativeName = "مشرف",
                            phoneNumber = "9876543210",
                            userCode = "ASND002",
                            userPassword = "user"
                        });
                });

            modelBuilder.Entity("Ascend.Data.Entities.Company", b =>
                {
                    b.HasOne("Ascend.Data.Entities.Country", "country")
                        .WithMany("company")
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("country");
                });

            modelBuilder.Entity("Ascend.Data.Entities.Department", b =>
                {
                    b.HasOne("Ascend.Data.Entities.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ascend.Data.Entities.User", "userCreate")
                        .WithMany()
                        .HasForeignKey("userCreated");

                    b.Navigation("company");

                    b.Navigation("userCreate");
                });

            modelBuilder.Entity("Ascend.Data.Entities.Designation", b =>
                {
                    b.HasOne("Ascend.Data.Entities.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("Ascend.Data.Entities.DesignationPermission", b =>
                {
                    b.HasOne("Ascend.Data.Entities.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ascend.Data.Entities.Designation", "designation")
                        .WithMany("designationPermissions")
                        .HasForeignKey("designationId");

                    b.HasOne("Ascend.Data.Entities.Permission", "permission")
                        .WithMany("designationPermissions")
                        .HasForeignKey("permissionId");

                    b.Navigation("company");

                    b.Navigation("designation");

                    b.Navigation("permission");
                });

            modelBuilder.Entity("Ascend.Data.Entities.State", b =>
                {
                    b.HasOne("Ascend.Data.Entities.Country", "country")
                        .WithMany("state")
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("country");
                });

            modelBuilder.Entity("Ascend.Data.Entities.User", b =>
                {
                    b.HasOne("Ascend.Data.Entities.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ascend.Data.Entities.Country", null)
                        .WithMany("user")
                        .HasForeignKey("countryId");

                    b.HasOne("Ascend.Data.Entities.Department", "department")
                        .WithOne()
                        .HasForeignKey("Ascend.Data.Entities.User", "departmentId");

                    b.HasOne("Ascend.Data.Entities.Designation", "designation")
                        .WithMany("users")
                        .HasForeignKey("designationId");

                    b.Navigation("company");

                    b.Navigation("department");

                    b.Navigation("designation");
                });

            modelBuilder.Entity("Ascend.Data.Entities.Country", b =>
                {
                    b.Navigation("company");

                    b.Navigation("state");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Ascend.Data.Entities.Designation", b =>
                {
                    b.Navigation("designationPermissions");

                    b.Navigation("users");
                });

            modelBuilder.Entity("Ascend.Data.Entities.Permission", b =>
                {
                    b.Navigation("designationPermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
